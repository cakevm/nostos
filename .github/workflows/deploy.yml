name: Deploy to Vercel

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Build and Deploy to Vercel
        run: |
          # Create .vercel directory with project config
          mkdir -p .vercel
          echo '{
            "projectId": "${{ secrets.VERCEL_PROJECT_ID }}",
            "orgId": "${{ secrets.VERCEL_ORG_ID }}"
          }' > .vercel/project.json
          
          # Build and deploy
          npx vercel --prod --token=${{ secrets.VERCEL_TOKEN }} --yes
        
      - name: Comment on PR (if applicable)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'âœ… Deployment successful!'
            })

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Build and Deploy Preview to Vercel
        id: deploy
        run: |
          # Create .vercel directory with project config
          mkdir -p .vercel
          echo '{
            "projectId": "${{ secrets.VERCEL_PROJECT_ID }}",
            "orgId": "${{ secrets.VERCEL_ORG_ID }}"
          }' > .vercel/project.json
          
          # Build and deploy preview
          DEPLOYMENT_URL=$(npx vercel --token=${{ secrets.VERCEL_TOKEN }} --yes)
          echo "deployment-url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
        
      - name: Comment PR with Preview URL
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deploymentUrl = '${{ steps.deploy.outputs.deployment-url }}';
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Preview deployment ready!\n\nðŸ”— **Preview URL:** ${deploymentUrl}\n\n*This preview will be updated on every commit.*`
            })